# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AWK = @AWK@
CC = @CC@
CXX = @CXX@
DEPDIR = @DEPDIR@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
PACKAGE = @PACKAGE@
STRIP = @STRIP@
VERSION = @VERSION@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@
AUTOMAKE_OPTIONS = gnu
bin_PROGRAMS = gl-117
gl_117_SOURCES = game/Game.cpp game/GameState.cpp game/Callbacks.cpp cockpit/Cockpit.cpp configuration/ConfigFile.cpp configuration/Configuration.cpp configuration/Dirs.cpp effects/BlackSmoke.cpp effects/Explosion.cpp effects/Flash.cpp effects/Font.cpp effects/HighClouds.cpp effects/Smoke.cpp effects/Star.cpp filetokenizer/FileTokenizer.cpp gllandscape/GlLandscape.cpp landscape/Landscape.cpp loadbitmap/LoadTga.cpp loadmodel/BinaryFile3ds.cpp loadmodel/Load3ds.cpp loadmodel/LoadObj.cpp loadmodel/TextFileObj.cpp logging/Logging.cpp math/Math.cpp menu/Button.cpp menu/Component.cpp menu/Component.h menu/Container.cpp menu/EditField.cpp menu/EditJoystick.cpp menu/EditKey.cpp menu/Label.cpp menu/TextField.cpp net/Client.cpp net/Server.cpp net/net.cpp opengl/Frustum.cpp opengl/GlPrimitives.cpp opengl/VertexArray.cpp pilot/Pilot.cpp pilot/PilotList.cpp pilot/TeamPilot.cpp sound/SoundSystem.cpp sound/WaveFile.cpp mission/MapLoader.cpp mission/MissionDemo1.cpp mission/MissionShip1.cpp mission/MissionAirBattle.cpp mission/MissionDepot.cpp mission/MissionShip2.cpp mission/MissionBase.cpp mission/MissionDogfight1.cpp mission/MissionShip3.cpp mission/MissionCanyon1.cpp mission/MissionDogfight2.cpp mission/MissionTank1.cpp mission/MissionCanyon2.cpp mission/MissionDogfight3.cpp mission/MissionTeamBase1.cpp mission/MissionCanyon3.cpp mission/MissionFreeFlight1.cpp mission/MissionTest1.cpp mission/MissionConvoy2.cpp mission/MissionGround1.cpp mission/MissionTest2.cpp mission/MissionConvoy.cpp mission/MissionMoonBase1.cpp mission/MissionTransport.cpp mission/Mission.cpp mission/MissionMoonBattle.cpp mission/MissionTunnel1.cpp mission/MissionDeathMatch1.cpp mission/MissionMoonDefense1.cpp mission/MissionTutorial1.cpp mission/MissionDeathMatch2.cpp mission/MissionMoonDogfight1.cpp mission/MissionTutorial2.cpp mission/MissionDeathMatch3.cpp mission/MissionMultiDogfight1.cpp mission/MissionTutorial3.cpp mission/MissionDefend1.cpp mission/MissionScout.cpp mission/MissionWaves1.cpp model3d/Color.cpp model3d/Object3d.cpp model3d/Space.cpp model3d/SpherePart.cpp model3d/Vector2.cpp model3d/Material.cpp model3d/Quad.cpp model3d/SpaceObj.cpp model3d/Texture.cpp model3d/Vector3.cpp model3d/Model3d.cpp model3d/Rotation.cpp model3d/Sphere.cpp model3d/Triangle.cpp model3d/Vertex.cpp aiobject/AiObj.cpp aiobject/DynamicObj.cpp
noinst_HEADERS = 
subdir = src
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = gl-117$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_gl_117_OBJECTS = Game.$(OBJEXT) GameState.$(OBJEXT) \
	Callbacks.$(OBJEXT) Cockpit.$(OBJEXT) ConfigFile.$(OBJEXT) \
	Configuration.$(OBJEXT) Dirs.$(OBJEXT) BlackSmoke.$(OBJEXT) \
	Explosion.$(OBJEXT) Flash.$(OBJEXT) Font.$(OBJEXT) \
	HighClouds.$(OBJEXT) Smoke.$(OBJEXT) Star.$(OBJEXT) \
	FileTokenizer.$(OBJEXT) GlLandscape.$(OBJEXT) \
	Landscape.$(OBJEXT) LoadTga.$(OBJEXT) BinaryFile3ds.$(OBJEXT) \
	Load3ds.$(OBJEXT) LoadObj.$(OBJEXT) TextFileObj.$(OBJEXT) \
	Logging.$(OBJEXT) Math.$(OBJEXT) Button.$(OBJEXT) \
	Component.$(OBJEXT) Container.$(OBJEXT) EditField.$(OBJEXT) \
	EditJoystick.$(OBJEXT) EditKey.$(OBJEXT) Label.$(OBJEXT) \
	TextField.$(OBJEXT) Client.$(OBJEXT) Server.$(OBJEXT) \
	net.$(OBJEXT) Frustum.$(OBJEXT) GlPrimitives.$(OBJEXT) \
	VertexArray.$(OBJEXT) Pilot.$(OBJEXT) PilotList.$(OBJEXT) \
	TeamPilot.$(OBJEXT) SoundSystem.$(OBJEXT) WaveFile.$(OBJEXT) \
	MapLoader.$(OBJEXT) MissionDemo1.$(OBJEXT) \
	MissionShip1.$(OBJEXT) MissionAirBattle.$(OBJEXT) \
	MissionDepot.$(OBJEXT) MissionShip2.$(OBJEXT) \
	MissionBase.$(OBJEXT) MissionDogfight1.$(OBJEXT) \
	MissionShip3.$(OBJEXT) MissionCanyon1.$(OBJEXT) \
	MissionDogfight2.$(OBJEXT) MissionTank1.$(OBJEXT) \
	MissionCanyon2.$(OBJEXT) MissionDogfight3.$(OBJEXT) \
	MissionTeamBase1.$(OBJEXT) MissionCanyon3.$(OBJEXT) \
	MissionFreeFlight1.$(OBJEXT) MissionTest1.$(OBJEXT) \
	MissionConvoy2.$(OBJEXT) MissionGround1.$(OBJEXT) \
	MissionTest2.$(OBJEXT) MissionConvoy.$(OBJEXT) \
	MissionMoonBase1.$(OBJEXT) MissionTransport.$(OBJEXT) \
	Mission.$(OBJEXT) MissionMoonBattle.$(OBJEXT) \
	MissionTunnel1.$(OBJEXT) MissionDeathMatch1.$(OBJEXT) \
	MissionMoonDefense1.$(OBJEXT) MissionTutorial1.$(OBJEXT) \
	MissionDeathMatch2.$(OBJEXT) MissionMoonDogfight1.$(OBJEXT) \
	MissionTutorial2.$(OBJEXT) MissionDeathMatch3.$(OBJEXT) \
	MissionMultiDogfight1.$(OBJEXT) MissionTutorial3.$(OBJEXT) \
	MissionDefend1.$(OBJEXT) MissionScout.$(OBJEXT) \
	MissionWaves1.$(OBJEXT) Color.$(OBJEXT) Object3d.$(OBJEXT) \
	Space.$(OBJEXT) SpherePart.$(OBJEXT) Vector2.$(OBJEXT) \
	Material.$(OBJEXT) Quad.$(OBJEXT) SpaceObj.$(OBJEXT) \
	Texture.$(OBJEXT) Vector3.$(OBJEXT) Model3d.$(OBJEXT) \
	Rotation.$(OBJEXT) Sphere.$(OBJEXT) Triangle.$(OBJEXT) \
	Vertex.$(OBJEXT) AiObj.$(OBJEXT) DynamicObj.$(OBJEXT)
gl_117_OBJECTS = $(am_gl_117_OBJECTS)
gl_117_LDADD = $(LDADD)
gl_117_DEPENDENCIES =
gl_117_LDFLAGS =

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/AiObj.Po \
@AMDEP_TRUE@	./$(DEPDIR)/BinaryFile3ds.Po \
@AMDEP_TRUE@	./$(DEPDIR)/BlackSmoke.Po ./$(DEPDIR)/Button.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Callbacks.Po ./$(DEPDIR)/Client.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Cockpit.Po ./$(DEPDIR)/Color.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Component.Po ./$(DEPDIR)/ConfigFile.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Configuration.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Container.Po ./$(DEPDIR)/Dirs.Po \
@AMDEP_TRUE@	./$(DEPDIR)/DynamicObj.Po ./$(DEPDIR)/EditField.Po \
@AMDEP_TRUE@	./$(DEPDIR)/EditJoystick.Po ./$(DEPDIR)/EditKey.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Explosion.Po \
@AMDEP_TRUE@	./$(DEPDIR)/FileTokenizer.Po ./$(DEPDIR)/Flash.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Font.Po ./$(DEPDIR)/Frustum.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Game.Po ./$(DEPDIR)/GameState.Po \
@AMDEP_TRUE@	./$(DEPDIR)/GlLandscape.Po \
@AMDEP_TRUE@	./$(DEPDIR)/GlPrimitives.Po \
@AMDEP_TRUE@	./$(DEPDIR)/HighClouds.Po ./$(DEPDIR)/Label.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Landscape.Po ./$(DEPDIR)/Load3ds.Po \
@AMDEP_TRUE@	./$(DEPDIR)/LoadObj.Po ./$(DEPDIR)/LoadTga.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Logging.Po ./$(DEPDIR)/MapLoader.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Material.Po ./$(DEPDIR)/Math.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Mission.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionAirBattle.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionBase.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionCanyon1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionCanyon2.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionCanyon3.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionConvoy.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionConvoy2.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionDeathMatch1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionDeathMatch2.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionDeathMatch3.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionDefend1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionDemo1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionDepot.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionDogfight1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionDogfight2.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionDogfight3.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionFreeFlight1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionGround1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionMoonBase1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionMoonBattle.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionMoonDefense1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionMoonDogfight1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionMultiDogfight1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionScout.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionShip1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionShip2.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionShip3.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionTank1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionTeamBase1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionTest1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionTest2.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionTransport.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionTunnel1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionTutorial1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionTutorial2.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionTutorial3.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MissionWaves1.Po ./$(DEPDIR)/Model3d.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Object3d.Po ./$(DEPDIR)/Pilot.Po \
@AMDEP_TRUE@	./$(DEPDIR)/PilotList.Po ./$(DEPDIR)/Quad.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Rotation.Po ./$(DEPDIR)/Server.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Smoke.Po ./$(DEPDIR)/SoundSystem.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Space.Po ./$(DEPDIR)/SpaceObj.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Sphere.Po ./$(DEPDIR)/SpherePart.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Star.Po ./$(DEPDIR)/TeamPilot.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TextField.Po ./$(DEPDIR)/TextFileObj.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Texture.Po ./$(DEPDIR)/Triangle.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Vector2.Po ./$(DEPDIR)/Vector3.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Vertex.Po ./$(DEPDIR)/VertexArray.Po \
@AMDEP_TRUE@	./$(DEPDIR)/WaveFile.Po ./$(DEPDIR)/net.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
CXXFLAGS = @CXXFLAGS@
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(gl_117_SOURCES)
HEADERS = $(noinst_HEADERS)

DIST_COMMON = $(noinst_HEADERS) Makefile.am Makefile.in
SOURCES = $(gl_117_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
Game.$(OBJEXT): game/Game.cpp
GameState.$(OBJEXT): game/GameState.cpp
Callbacks.$(OBJEXT): game/Callbacks.cpp
Cockpit.$(OBJEXT): cockpit/Cockpit.cpp
ConfigFile.$(OBJEXT): configuration/ConfigFile.cpp
Configuration.$(OBJEXT): configuration/Configuration.cpp
Dirs.$(OBJEXT): configuration/Dirs.cpp
BlackSmoke.$(OBJEXT): effects/BlackSmoke.cpp
Explosion.$(OBJEXT): effects/Explosion.cpp
Flash.$(OBJEXT): effects/Flash.cpp
Font.$(OBJEXT): effects/Font.cpp
HighClouds.$(OBJEXT): effects/HighClouds.cpp
Smoke.$(OBJEXT): effects/Smoke.cpp
Star.$(OBJEXT): effects/Star.cpp
FileTokenizer.$(OBJEXT): filetokenizer/FileTokenizer.cpp
GlLandscape.$(OBJEXT): gllandscape/GlLandscape.cpp
Landscape.$(OBJEXT): landscape/Landscape.cpp
LoadTga.$(OBJEXT): loadbitmap/LoadTga.cpp
BinaryFile3ds.$(OBJEXT): loadmodel/BinaryFile3ds.cpp
Load3ds.$(OBJEXT): loadmodel/Load3ds.cpp
LoadObj.$(OBJEXT): loadmodel/LoadObj.cpp
TextFileObj.$(OBJEXT): loadmodel/TextFileObj.cpp
Logging.$(OBJEXT): logging/Logging.cpp
Math.$(OBJEXT): math/Math.cpp
Button.$(OBJEXT): menu/Button.cpp
Component.$(OBJEXT): menu/Component.cpp
Container.$(OBJEXT): menu/Container.cpp
EditField.$(OBJEXT): menu/EditField.cpp
EditJoystick.$(OBJEXT): menu/EditJoystick.cpp
EditKey.$(OBJEXT): menu/EditKey.cpp
Label.$(OBJEXT): menu/Label.cpp
TextField.$(OBJEXT): menu/TextField.cpp
Client.$(OBJEXT): net/Client.cpp
Server.$(OBJEXT): net/Server.cpp
net.$(OBJEXT): net/net.cpp
Frustum.$(OBJEXT): opengl/Frustum.cpp
GlPrimitives.$(OBJEXT): opengl/GlPrimitives.cpp
VertexArray.$(OBJEXT): opengl/VertexArray.cpp
Pilot.$(OBJEXT): pilot/Pilot.cpp
PilotList.$(OBJEXT): pilot/PilotList.cpp
TeamPilot.$(OBJEXT): pilot/TeamPilot.cpp
SoundSystem.$(OBJEXT): sound/SoundSystem.cpp
WaveFile.$(OBJEXT): sound/WaveFile.cpp
MapLoader.$(OBJEXT): mission/MapLoader.cpp
MissionDemo1.$(OBJEXT): mission/MissionDemo1.cpp
MissionShip1.$(OBJEXT): mission/MissionShip1.cpp
MissionAirBattle.$(OBJEXT): mission/MissionAirBattle.cpp
MissionDepot.$(OBJEXT): mission/MissionDepot.cpp
MissionShip2.$(OBJEXT): mission/MissionShip2.cpp
MissionBase.$(OBJEXT): mission/MissionBase.cpp
MissionDogfight1.$(OBJEXT): mission/MissionDogfight1.cpp
MissionShip3.$(OBJEXT): mission/MissionShip3.cpp
MissionCanyon1.$(OBJEXT): mission/MissionCanyon1.cpp
MissionDogfight2.$(OBJEXT): mission/MissionDogfight2.cpp
MissionTank1.$(OBJEXT): mission/MissionTank1.cpp
MissionCanyon2.$(OBJEXT): mission/MissionCanyon2.cpp
MissionDogfight3.$(OBJEXT): mission/MissionDogfight3.cpp
MissionTeamBase1.$(OBJEXT): mission/MissionTeamBase1.cpp
MissionCanyon3.$(OBJEXT): mission/MissionCanyon3.cpp
MissionFreeFlight1.$(OBJEXT): mission/MissionFreeFlight1.cpp
MissionTest1.$(OBJEXT): mission/MissionTest1.cpp
MissionConvoy2.$(OBJEXT): mission/MissionConvoy2.cpp
MissionGround1.$(OBJEXT): mission/MissionGround1.cpp
MissionTest2.$(OBJEXT): mission/MissionTest2.cpp
MissionConvoy.$(OBJEXT): mission/MissionConvoy.cpp
MissionMoonBase1.$(OBJEXT): mission/MissionMoonBase1.cpp
MissionTransport.$(OBJEXT): mission/MissionTransport.cpp
Mission.$(OBJEXT): mission/Mission.cpp
MissionMoonBattle.$(OBJEXT): mission/MissionMoonBattle.cpp
MissionTunnel1.$(OBJEXT): mission/MissionTunnel1.cpp
MissionDeathMatch1.$(OBJEXT): mission/MissionDeathMatch1.cpp
MissionMoonDefense1.$(OBJEXT): mission/MissionMoonDefense1.cpp
MissionTutorial1.$(OBJEXT): mission/MissionTutorial1.cpp
MissionDeathMatch2.$(OBJEXT): mission/MissionDeathMatch2.cpp
MissionMoonDogfight1.$(OBJEXT): mission/MissionMoonDogfight1.cpp
MissionTutorial2.$(OBJEXT): mission/MissionTutorial2.cpp
MissionDeathMatch3.$(OBJEXT): mission/MissionDeathMatch3.cpp
MissionMultiDogfight1.$(OBJEXT): mission/MissionMultiDogfight1.cpp
MissionTutorial3.$(OBJEXT): mission/MissionTutorial3.cpp
MissionDefend1.$(OBJEXT): mission/MissionDefend1.cpp
MissionScout.$(OBJEXT): mission/MissionScout.cpp
MissionWaves1.$(OBJEXT): mission/MissionWaves1.cpp
Color.$(OBJEXT): model3d/Color.cpp
Object3d.$(OBJEXT): model3d/Object3d.cpp
Space.$(OBJEXT): model3d/Space.cpp
SpherePart.$(OBJEXT): model3d/SpherePart.cpp
Vector2.$(OBJEXT): model3d/Vector2.cpp
Material.$(OBJEXT): model3d/Material.cpp
Quad.$(OBJEXT): model3d/Quad.cpp
SpaceObj.$(OBJEXT): model3d/SpaceObj.cpp
Texture.$(OBJEXT): model3d/Texture.cpp
Vector3.$(OBJEXT): model3d/Vector3.cpp
Model3d.$(OBJEXT): model3d/Model3d.cpp
Rotation.$(OBJEXT): model3d/Rotation.cpp
Sphere.$(OBJEXT): model3d/Sphere.cpp
Triangle.$(OBJEXT): model3d/Triangle.cpp
Vertex.$(OBJEXT): model3d/Vertex.cpp
AiObj.$(OBJEXT): aiobject/AiObj.cpp
DynamicObj.$(OBJEXT): aiobject/DynamicObj.cpp
gl-117$(EXEEXT): $(gl_117_OBJECTS) $(gl_117_DEPENDENCIES) 
	@rm -f gl-117$(EXEEXT)
	$(CXXLINK) $(gl_117_LDFLAGS) $(gl_117_OBJECTS) $(gl_117_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AiObj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BinaryFile3ds.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BlackSmoke.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Button.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Callbacks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Client.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Cockpit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Color.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Component.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ConfigFile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Configuration.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Container.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Dirs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DynamicObj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EditField.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EditJoystick.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EditKey.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Explosion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FileTokenizer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Flash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Font.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Frustum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Game.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GameState.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GlLandscape.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GlPrimitives.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HighClouds.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Label.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Landscape.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Load3ds.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LoadObj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LoadTga.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Logging.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MapLoader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Material.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Math.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Mission.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionAirBattle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionBase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionCanyon1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionCanyon2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionCanyon3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionConvoy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionConvoy2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionDeathMatch1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionDeathMatch2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionDeathMatch3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionDefend1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionDemo1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionDepot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionDogfight1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionDogfight2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionDogfight3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionFreeFlight1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionGround1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionMoonBase1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionMoonBattle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionMoonDefense1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionMoonDogfight1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionMultiDogfight1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionScout.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionShip1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionShip2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionShip3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionTank1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionTeamBase1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionTest1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionTest2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionTransport.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionTunnel1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionTutorial1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionTutorial2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionTutorial3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MissionWaves1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Model3d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Object3d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Pilot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PilotList.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Quad.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rotation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Server.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Smoke.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoundSystem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Space.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SpaceObj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Sphere.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SpherePart.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Star.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TeamPilot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TextField.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TextFileObj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Texture.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Triangle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Vector2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Vector3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Vertex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VertexArray.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/WaveFile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/net.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

Game.o: game/Game.cpp
@AMDEP_TRUE@	source='game/Game.cpp' object='Game.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Game.Po' tmpdepfile='$(DEPDIR)/Game.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Game.o `test -f 'game/Game.cpp' || echo '$(srcdir)/'`game/Game.cpp

Game.obj: game/Game.cpp
@AMDEP_TRUE@	source='game/Game.cpp' object='Game.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Game.Po' tmpdepfile='$(DEPDIR)/Game.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Game.obj `cygpath -w game/Game.cpp`

GameState.o: game/GameState.cpp
@AMDEP_TRUE@	source='game/GameState.cpp' object='GameState.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/GameState.Po' tmpdepfile='$(DEPDIR)/GameState.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GameState.o `test -f 'game/GameState.cpp' || echo '$(srcdir)/'`game/GameState.cpp

GameState.obj: game/GameState.cpp
@AMDEP_TRUE@	source='game/GameState.cpp' object='GameState.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/GameState.Po' tmpdepfile='$(DEPDIR)/GameState.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GameState.obj `cygpath -w game/GameState.cpp`

Callbacks.o: game/Callbacks.cpp
@AMDEP_TRUE@	source='game/Callbacks.cpp' object='Callbacks.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Callbacks.Po' tmpdepfile='$(DEPDIR)/Callbacks.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Callbacks.o `test -f 'game/Callbacks.cpp' || echo '$(srcdir)/'`game/Callbacks.cpp

Callbacks.obj: game/Callbacks.cpp
@AMDEP_TRUE@	source='game/Callbacks.cpp' object='Callbacks.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Callbacks.Po' tmpdepfile='$(DEPDIR)/Callbacks.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Callbacks.obj `cygpath -w game/Callbacks.cpp`

Cockpit.o: cockpit/Cockpit.cpp
@AMDEP_TRUE@	source='cockpit/Cockpit.cpp' object='Cockpit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Cockpit.Po' tmpdepfile='$(DEPDIR)/Cockpit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Cockpit.o `test -f 'cockpit/Cockpit.cpp' || echo '$(srcdir)/'`cockpit/Cockpit.cpp

Cockpit.obj: cockpit/Cockpit.cpp
@AMDEP_TRUE@	source='cockpit/Cockpit.cpp' object='Cockpit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Cockpit.Po' tmpdepfile='$(DEPDIR)/Cockpit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Cockpit.obj `cygpath -w cockpit/Cockpit.cpp`

ConfigFile.o: configuration/ConfigFile.cpp
@AMDEP_TRUE@	source='configuration/ConfigFile.cpp' object='ConfigFile.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ConfigFile.Po' tmpdepfile='$(DEPDIR)/ConfigFile.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ConfigFile.o `test -f 'configuration/ConfigFile.cpp' || echo '$(srcdir)/'`configuration/ConfigFile.cpp

ConfigFile.obj: configuration/ConfigFile.cpp
@AMDEP_TRUE@	source='configuration/ConfigFile.cpp' object='ConfigFile.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ConfigFile.Po' tmpdepfile='$(DEPDIR)/ConfigFile.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ConfigFile.obj `cygpath -w configuration/ConfigFile.cpp`

Configuration.o: configuration/Configuration.cpp
@AMDEP_TRUE@	source='configuration/Configuration.cpp' object='Configuration.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Configuration.Po' tmpdepfile='$(DEPDIR)/Configuration.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Configuration.o `test -f 'configuration/Configuration.cpp' || echo '$(srcdir)/'`configuration/Configuration.cpp

Configuration.obj: configuration/Configuration.cpp
@AMDEP_TRUE@	source='configuration/Configuration.cpp' object='Configuration.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Configuration.Po' tmpdepfile='$(DEPDIR)/Configuration.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Configuration.obj `cygpath -w configuration/Configuration.cpp`

Dirs.o: configuration/Dirs.cpp
@AMDEP_TRUE@	source='configuration/Dirs.cpp' object='Dirs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Dirs.Po' tmpdepfile='$(DEPDIR)/Dirs.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Dirs.o `test -f 'configuration/Dirs.cpp' || echo '$(srcdir)/'`configuration/Dirs.cpp

Dirs.obj: configuration/Dirs.cpp
@AMDEP_TRUE@	source='configuration/Dirs.cpp' object='Dirs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Dirs.Po' tmpdepfile='$(DEPDIR)/Dirs.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Dirs.obj `cygpath -w configuration/Dirs.cpp`

BlackSmoke.o: effects/BlackSmoke.cpp
@AMDEP_TRUE@	source='effects/BlackSmoke.cpp' object='BlackSmoke.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/BlackSmoke.Po' tmpdepfile='$(DEPDIR)/BlackSmoke.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BlackSmoke.o `test -f 'effects/BlackSmoke.cpp' || echo '$(srcdir)/'`effects/BlackSmoke.cpp

BlackSmoke.obj: effects/BlackSmoke.cpp
@AMDEP_TRUE@	source='effects/BlackSmoke.cpp' object='BlackSmoke.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/BlackSmoke.Po' tmpdepfile='$(DEPDIR)/BlackSmoke.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BlackSmoke.obj `cygpath -w effects/BlackSmoke.cpp`

Explosion.o: effects/Explosion.cpp
@AMDEP_TRUE@	source='effects/Explosion.cpp' object='Explosion.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Explosion.Po' tmpdepfile='$(DEPDIR)/Explosion.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Explosion.o `test -f 'effects/Explosion.cpp' || echo '$(srcdir)/'`effects/Explosion.cpp

Explosion.obj: effects/Explosion.cpp
@AMDEP_TRUE@	source='effects/Explosion.cpp' object='Explosion.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Explosion.Po' tmpdepfile='$(DEPDIR)/Explosion.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Explosion.obj `cygpath -w effects/Explosion.cpp`

Flash.o: effects/Flash.cpp
@AMDEP_TRUE@	source='effects/Flash.cpp' object='Flash.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Flash.Po' tmpdepfile='$(DEPDIR)/Flash.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Flash.o `test -f 'effects/Flash.cpp' || echo '$(srcdir)/'`effects/Flash.cpp

Flash.obj: effects/Flash.cpp
@AMDEP_TRUE@	source='effects/Flash.cpp' object='Flash.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Flash.Po' tmpdepfile='$(DEPDIR)/Flash.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Flash.obj `cygpath -w effects/Flash.cpp`

Font.o: effects/Font.cpp
@AMDEP_TRUE@	source='effects/Font.cpp' object='Font.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Font.Po' tmpdepfile='$(DEPDIR)/Font.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Font.o `test -f 'effects/Font.cpp' || echo '$(srcdir)/'`effects/Font.cpp

Font.obj: effects/Font.cpp
@AMDEP_TRUE@	source='effects/Font.cpp' object='Font.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Font.Po' tmpdepfile='$(DEPDIR)/Font.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Font.obj `cygpath -w effects/Font.cpp`

HighClouds.o: effects/HighClouds.cpp
@AMDEP_TRUE@	source='effects/HighClouds.cpp' object='HighClouds.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HighClouds.Po' tmpdepfile='$(DEPDIR)/HighClouds.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HighClouds.o `test -f 'effects/HighClouds.cpp' || echo '$(srcdir)/'`effects/HighClouds.cpp

HighClouds.obj: effects/HighClouds.cpp
@AMDEP_TRUE@	source='effects/HighClouds.cpp' object='HighClouds.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HighClouds.Po' tmpdepfile='$(DEPDIR)/HighClouds.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HighClouds.obj `cygpath -w effects/HighClouds.cpp`

Smoke.o: effects/Smoke.cpp
@AMDEP_TRUE@	source='effects/Smoke.cpp' object='Smoke.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Smoke.Po' tmpdepfile='$(DEPDIR)/Smoke.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Smoke.o `test -f 'effects/Smoke.cpp' || echo '$(srcdir)/'`effects/Smoke.cpp

Smoke.obj: effects/Smoke.cpp
@AMDEP_TRUE@	source='effects/Smoke.cpp' object='Smoke.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Smoke.Po' tmpdepfile='$(DEPDIR)/Smoke.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Smoke.obj `cygpath -w effects/Smoke.cpp`

Star.o: effects/Star.cpp
@AMDEP_TRUE@	source='effects/Star.cpp' object='Star.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Star.Po' tmpdepfile='$(DEPDIR)/Star.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Star.o `test -f 'effects/Star.cpp' || echo '$(srcdir)/'`effects/Star.cpp

Star.obj: effects/Star.cpp
@AMDEP_TRUE@	source='effects/Star.cpp' object='Star.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Star.Po' tmpdepfile='$(DEPDIR)/Star.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Star.obj `cygpath -w effects/Star.cpp`

FileTokenizer.o: filetokenizer/FileTokenizer.cpp
@AMDEP_TRUE@	source='filetokenizer/FileTokenizer.cpp' object='FileTokenizer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/FileTokenizer.Po' tmpdepfile='$(DEPDIR)/FileTokenizer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FileTokenizer.o `test -f 'filetokenizer/FileTokenizer.cpp' || echo '$(srcdir)/'`filetokenizer/FileTokenizer.cpp

FileTokenizer.obj: filetokenizer/FileTokenizer.cpp
@AMDEP_TRUE@	source='filetokenizer/FileTokenizer.cpp' object='FileTokenizer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/FileTokenizer.Po' tmpdepfile='$(DEPDIR)/FileTokenizer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FileTokenizer.obj `cygpath -w filetokenizer/FileTokenizer.cpp`

GlLandscape.o: gllandscape/GlLandscape.cpp
@AMDEP_TRUE@	source='gllandscape/GlLandscape.cpp' object='GlLandscape.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/GlLandscape.Po' tmpdepfile='$(DEPDIR)/GlLandscape.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GlLandscape.o `test -f 'gllandscape/GlLandscape.cpp' || echo '$(srcdir)/'`gllandscape/GlLandscape.cpp

GlLandscape.obj: gllandscape/GlLandscape.cpp
@AMDEP_TRUE@	source='gllandscape/GlLandscape.cpp' object='GlLandscape.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/GlLandscape.Po' tmpdepfile='$(DEPDIR)/GlLandscape.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GlLandscape.obj `cygpath -w gllandscape/GlLandscape.cpp`

Landscape.o: landscape/Landscape.cpp
@AMDEP_TRUE@	source='landscape/Landscape.cpp' object='Landscape.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Landscape.Po' tmpdepfile='$(DEPDIR)/Landscape.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Landscape.o `test -f 'landscape/Landscape.cpp' || echo '$(srcdir)/'`landscape/Landscape.cpp

Landscape.obj: landscape/Landscape.cpp
@AMDEP_TRUE@	source='landscape/Landscape.cpp' object='Landscape.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Landscape.Po' tmpdepfile='$(DEPDIR)/Landscape.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Landscape.obj `cygpath -w landscape/Landscape.cpp`

LoadTga.o: loadbitmap/LoadTga.cpp
@AMDEP_TRUE@	source='loadbitmap/LoadTga.cpp' object='LoadTga.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/LoadTga.Po' tmpdepfile='$(DEPDIR)/LoadTga.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LoadTga.o `test -f 'loadbitmap/LoadTga.cpp' || echo '$(srcdir)/'`loadbitmap/LoadTga.cpp

LoadTga.obj: loadbitmap/LoadTga.cpp
@AMDEP_TRUE@	source='loadbitmap/LoadTga.cpp' object='LoadTga.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/LoadTga.Po' tmpdepfile='$(DEPDIR)/LoadTga.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LoadTga.obj `cygpath -w loadbitmap/LoadTga.cpp`

BinaryFile3ds.o: loadmodel/BinaryFile3ds.cpp
@AMDEP_TRUE@	source='loadmodel/BinaryFile3ds.cpp' object='BinaryFile3ds.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/BinaryFile3ds.Po' tmpdepfile='$(DEPDIR)/BinaryFile3ds.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BinaryFile3ds.o `test -f 'loadmodel/BinaryFile3ds.cpp' || echo '$(srcdir)/'`loadmodel/BinaryFile3ds.cpp

BinaryFile3ds.obj: loadmodel/BinaryFile3ds.cpp
@AMDEP_TRUE@	source='loadmodel/BinaryFile3ds.cpp' object='BinaryFile3ds.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/BinaryFile3ds.Po' tmpdepfile='$(DEPDIR)/BinaryFile3ds.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BinaryFile3ds.obj `cygpath -w loadmodel/BinaryFile3ds.cpp`

Load3ds.o: loadmodel/Load3ds.cpp
@AMDEP_TRUE@	source='loadmodel/Load3ds.cpp' object='Load3ds.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Load3ds.Po' tmpdepfile='$(DEPDIR)/Load3ds.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Load3ds.o `test -f 'loadmodel/Load3ds.cpp' || echo '$(srcdir)/'`loadmodel/Load3ds.cpp

Load3ds.obj: loadmodel/Load3ds.cpp
@AMDEP_TRUE@	source='loadmodel/Load3ds.cpp' object='Load3ds.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Load3ds.Po' tmpdepfile='$(DEPDIR)/Load3ds.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Load3ds.obj `cygpath -w loadmodel/Load3ds.cpp`

LoadObj.o: loadmodel/LoadObj.cpp
@AMDEP_TRUE@	source='loadmodel/LoadObj.cpp' object='LoadObj.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/LoadObj.Po' tmpdepfile='$(DEPDIR)/LoadObj.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LoadObj.o `test -f 'loadmodel/LoadObj.cpp' || echo '$(srcdir)/'`loadmodel/LoadObj.cpp

LoadObj.obj: loadmodel/LoadObj.cpp
@AMDEP_TRUE@	source='loadmodel/LoadObj.cpp' object='LoadObj.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/LoadObj.Po' tmpdepfile='$(DEPDIR)/LoadObj.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LoadObj.obj `cygpath -w loadmodel/LoadObj.cpp`

TextFileObj.o: loadmodel/TextFileObj.cpp
@AMDEP_TRUE@	source='loadmodel/TextFileObj.cpp' object='TextFileObj.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TextFileObj.Po' tmpdepfile='$(DEPDIR)/TextFileObj.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TextFileObj.o `test -f 'loadmodel/TextFileObj.cpp' || echo '$(srcdir)/'`loadmodel/TextFileObj.cpp

TextFileObj.obj: loadmodel/TextFileObj.cpp
@AMDEP_TRUE@	source='loadmodel/TextFileObj.cpp' object='TextFileObj.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TextFileObj.Po' tmpdepfile='$(DEPDIR)/TextFileObj.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TextFileObj.obj `cygpath -w loadmodel/TextFileObj.cpp`

Logging.o: logging/Logging.cpp
@AMDEP_TRUE@	source='logging/Logging.cpp' object='Logging.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Logging.Po' tmpdepfile='$(DEPDIR)/Logging.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Logging.o `test -f 'logging/Logging.cpp' || echo '$(srcdir)/'`logging/Logging.cpp

Logging.obj: logging/Logging.cpp
@AMDEP_TRUE@	source='logging/Logging.cpp' object='Logging.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Logging.Po' tmpdepfile='$(DEPDIR)/Logging.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Logging.obj `cygpath -w logging/Logging.cpp`

Math.o: math/Math.cpp
@AMDEP_TRUE@	source='math/Math.cpp' object='Math.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Math.Po' tmpdepfile='$(DEPDIR)/Math.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Math.o `test -f 'math/Math.cpp' || echo '$(srcdir)/'`math/Math.cpp

Math.obj: math/Math.cpp
@AMDEP_TRUE@	source='math/Math.cpp' object='Math.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Math.Po' tmpdepfile='$(DEPDIR)/Math.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Math.obj `cygpath -w math/Math.cpp`

Button.o: menu/Button.cpp
@AMDEP_TRUE@	source='menu/Button.cpp' object='Button.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Button.Po' tmpdepfile='$(DEPDIR)/Button.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Button.o `test -f 'menu/Button.cpp' || echo '$(srcdir)/'`menu/Button.cpp

Button.obj: menu/Button.cpp
@AMDEP_TRUE@	source='menu/Button.cpp' object='Button.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Button.Po' tmpdepfile='$(DEPDIR)/Button.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Button.obj `cygpath -w menu/Button.cpp`

Component.o: menu/Component.cpp
@AMDEP_TRUE@	source='menu/Component.cpp' object='Component.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Component.Po' tmpdepfile='$(DEPDIR)/Component.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Component.o `test -f 'menu/Component.cpp' || echo '$(srcdir)/'`menu/Component.cpp

Component.obj: menu/Component.cpp
@AMDEP_TRUE@	source='menu/Component.cpp' object='Component.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Component.Po' tmpdepfile='$(DEPDIR)/Component.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Component.obj `cygpath -w menu/Component.cpp`

Container.o: menu/Container.cpp
@AMDEP_TRUE@	source='menu/Container.cpp' object='Container.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Container.Po' tmpdepfile='$(DEPDIR)/Container.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Container.o `test -f 'menu/Container.cpp' || echo '$(srcdir)/'`menu/Container.cpp

Container.obj: menu/Container.cpp
@AMDEP_TRUE@	source='menu/Container.cpp' object='Container.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Container.Po' tmpdepfile='$(DEPDIR)/Container.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Container.obj `cygpath -w menu/Container.cpp`

EditField.o: menu/EditField.cpp
@AMDEP_TRUE@	source='menu/EditField.cpp' object='EditField.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EditField.Po' tmpdepfile='$(DEPDIR)/EditField.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EditField.o `test -f 'menu/EditField.cpp' || echo '$(srcdir)/'`menu/EditField.cpp

EditField.obj: menu/EditField.cpp
@AMDEP_TRUE@	source='menu/EditField.cpp' object='EditField.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EditField.Po' tmpdepfile='$(DEPDIR)/EditField.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EditField.obj `cygpath -w menu/EditField.cpp`

EditJoystick.o: menu/EditJoystick.cpp
@AMDEP_TRUE@	source='menu/EditJoystick.cpp' object='EditJoystick.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EditJoystick.Po' tmpdepfile='$(DEPDIR)/EditJoystick.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EditJoystick.o `test -f 'menu/EditJoystick.cpp' || echo '$(srcdir)/'`menu/EditJoystick.cpp

EditJoystick.obj: menu/EditJoystick.cpp
@AMDEP_TRUE@	source='menu/EditJoystick.cpp' object='EditJoystick.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EditJoystick.Po' tmpdepfile='$(DEPDIR)/EditJoystick.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EditJoystick.obj `cygpath -w menu/EditJoystick.cpp`

EditKey.o: menu/EditKey.cpp
@AMDEP_TRUE@	source='menu/EditKey.cpp' object='EditKey.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EditKey.Po' tmpdepfile='$(DEPDIR)/EditKey.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EditKey.o `test -f 'menu/EditKey.cpp' || echo '$(srcdir)/'`menu/EditKey.cpp

EditKey.obj: menu/EditKey.cpp
@AMDEP_TRUE@	source='menu/EditKey.cpp' object='EditKey.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EditKey.Po' tmpdepfile='$(DEPDIR)/EditKey.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EditKey.obj `cygpath -w menu/EditKey.cpp`

Label.o: menu/Label.cpp
@AMDEP_TRUE@	source='menu/Label.cpp' object='Label.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Label.Po' tmpdepfile='$(DEPDIR)/Label.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Label.o `test -f 'menu/Label.cpp' || echo '$(srcdir)/'`menu/Label.cpp

Label.obj: menu/Label.cpp
@AMDEP_TRUE@	source='menu/Label.cpp' object='Label.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Label.Po' tmpdepfile='$(DEPDIR)/Label.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Label.obj `cygpath -w menu/Label.cpp`

TextField.o: menu/TextField.cpp
@AMDEP_TRUE@	source='menu/TextField.cpp' object='TextField.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TextField.Po' tmpdepfile='$(DEPDIR)/TextField.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TextField.o `test -f 'menu/TextField.cpp' || echo '$(srcdir)/'`menu/TextField.cpp

TextField.obj: menu/TextField.cpp
@AMDEP_TRUE@	source='menu/TextField.cpp' object='TextField.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TextField.Po' tmpdepfile='$(DEPDIR)/TextField.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TextField.obj `cygpath -w menu/TextField.cpp`

Client.o: net/Client.cpp
@AMDEP_TRUE@	source='net/Client.cpp' object='Client.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Client.Po' tmpdepfile='$(DEPDIR)/Client.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Client.o `test -f 'net/Client.cpp' || echo '$(srcdir)/'`net/Client.cpp

Client.obj: net/Client.cpp
@AMDEP_TRUE@	source='net/Client.cpp' object='Client.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Client.Po' tmpdepfile='$(DEPDIR)/Client.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Client.obj `cygpath -w net/Client.cpp`

Server.o: net/Server.cpp
@AMDEP_TRUE@	source='net/Server.cpp' object='Server.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Server.Po' tmpdepfile='$(DEPDIR)/Server.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Server.o `test -f 'net/Server.cpp' || echo '$(srcdir)/'`net/Server.cpp

Server.obj: net/Server.cpp
@AMDEP_TRUE@	source='net/Server.cpp' object='Server.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Server.Po' tmpdepfile='$(DEPDIR)/Server.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Server.obj `cygpath -w net/Server.cpp`

net.o: net/net.cpp
@AMDEP_TRUE@	source='net/net.cpp' object='net.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/net.Po' tmpdepfile='$(DEPDIR)/net.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o net.o `test -f 'net/net.cpp' || echo '$(srcdir)/'`net/net.cpp

net.obj: net/net.cpp
@AMDEP_TRUE@	source='net/net.cpp' object='net.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/net.Po' tmpdepfile='$(DEPDIR)/net.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o net.obj `cygpath -w net/net.cpp`

Frustum.o: opengl/Frustum.cpp
@AMDEP_TRUE@	source='opengl/Frustum.cpp' object='Frustum.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Frustum.Po' tmpdepfile='$(DEPDIR)/Frustum.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Frustum.o `test -f 'opengl/Frustum.cpp' || echo '$(srcdir)/'`opengl/Frustum.cpp

Frustum.obj: opengl/Frustum.cpp
@AMDEP_TRUE@	source='opengl/Frustum.cpp' object='Frustum.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Frustum.Po' tmpdepfile='$(DEPDIR)/Frustum.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Frustum.obj `cygpath -w opengl/Frustum.cpp`

GlPrimitives.o: opengl/GlPrimitives.cpp
@AMDEP_TRUE@	source='opengl/GlPrimitives.cpp' object='GlPrimitives.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/GlPrimitives.Po' tmpdepfile='$(DEPDIR)/GlPrimitives.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GlPrimitives.o `test -f 'opengl/GlPrimitives.cpp' || echo '$(srcdir)/'`opengl/GlPrimitives.cpp

GlPrimitives.obj: opengl/GlPrimitives.cpp
@AMDEP_TRUE@	source='opengl/GlPrimitives.cpp' object='GlPrimitives.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/GlPrimitives.Po' tmpdepfile='$(DEPDIR)/GlPrimitives.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GlPrimitives.obj `cygpath -w opengl/GlPrimitives.cpp`

VertexArray.o: opengl/VertexArray.cpp
@AMDEP_TRUE@	source='opengl/VertexArray.cpp' object='VertexArray.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/VertexArray.Po' tmpdepfile='$(DEPDIR)/VertexArray.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VertexArray.o `test -f 'opengl/VertexArray.cpp' || echo '$(srcdir)/'`opengl/VertexArray.cpp

VertexArray.obj: opengl/VertexArray.cpp
@AMDEP_TRUE@	source='opengl/VertexArray.cpp' object='VertexArray.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/VertexArray.Po' tmpdepfile='$(DEPDIR)/VertexArray.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VertexArray.obj `cygpath -w opengl/VertexArray.cpp`

Pilot.o: pilot/Pilot.cpp
@AMDEP_TRUE@	source='pilot/Pilot.cpp' object='Pilot.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Pilot.Po' tmpdepfile='$(DEPDIR)/Pilot.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Pilot.o `test -f 'pilot/Pilot.cpp' || echo '$(srcdir)/'`pilot/Pilot.cpp

Pilot.obj: pilot/Pilot.cpp
@AMDEP_TRUE@	source='pilot/Pilot.cpp' object='Pilot.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Pilot.Po' tmpdepfile='$(DEPDIR)/Pilot.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Pilot.obj `cygpath -w pilot/Pilot.cpp`

PilotList.o: pilot/PilotList.cpp
@AMDEP_TRUE@	source='pilot/PilotList.cpp' object='PilotList.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/PilotList.Po' tmpdepfile='$(DEPDIR)/PilotList.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PilotList.o `test -f 'pilot/PilotList.cpp' || echo '$(srcdir)/'`pilot/PilotList.cpp

PilotList.obj: pilot/PilotList.cpp
@AMDEP_TRUE@	source='pilot/PilotList.cpp' object='PilotList.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/PilotList.Po' tmpdepfile='$(DEPDIR)/PilotList.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PilotList.obj `cygpath -w pilot/PilotList.cpp`

TeamPilot.o: pilot/TeamPilot.cpp
@AMDEP_TRUE@	source='pilot/TeamPilot.cpp' object='TeamPilot.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TeamPilot.Po' tmpdepfile='$(DEPDIR)/TeamPilot.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TeamPilot.o `test -f 'pilot/TeamPilot.cpp' || echo '$(srcdir)/'`pilot/TeamPilot.cpp

TeamPilot.obj: pilot/TeamPilot.cpp
@AMDEP_TRUE@	source='pilot/TeamPilot.cpp' object='TeamPilot.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TeamPilot.Po' tmpdepfile='$(DEPDIR)/TeamPilot.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TeamPilot.obj `cygpath -w pilot/TeamPilot.cpp`

SoundSystem.o: sound/SoundSystem.cpp
@AMDEP_TRUE@	source='sound/SoundSystem.cpp' object='SoundSystem.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SoundSystem.Po' tmpdepfile='$(DEPDIR)/SoundSystem.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoundSystem.o `test -f 'sound/SoundSystem.cpp' || echo '$(srcdir)/'`sound/SoundSystem.cpp

SoundSystem.obj: sound/SoundSystem.cpp
@AMDEP_TRUE@	source='sound/SoundSystem.cpp' object='SoundSystem.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SoundSystem.Po' tmpdepfile='$(DEPDIR)/SoundSystem.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoundSystem.obj `cygpath -w sound/SoundSystem.cpp`

WaveFile.o: sound/WaveFile.cpp
@AMDEP_TRUE@	source='sound/WaveFile.cpp' object='WaveFile.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/WaveFile.Po' tmpdepfile='$(DEPDIR)/WaveFile.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WaveFile.o `test -f 'sound/WaveFile.cpp' || echo '$(srcdir)/'`sound/WaveFile.cpp

WaveFile.obj: sound/WaveFile.cpp
@AMDEP_TRUE@	source='sound/WaveFile.cpp' object='WaveFile.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/WaveFile.Po' tmpdepfile='$(DEPDIR)/WaveFile.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WaveFile.obj `cygpath -w sound/WaveFile.cpp`

MapLoader.o: mission/MapLoader.cpp
@AMDEP_TRUE@	source='mission/MapLoader.cpp' object='MapLoader.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MapLoader.Po' tmpdepfile='$(DEPDIR)/MapLoader.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MapLoader.o `test -f 'mission/MapLoader.cpp' || echo '$(srcdir)/'`mission/MapLoader.cpp

MapLoader.obj: mission/MapLoader.cpp
@AMDEP_TRUE@	source='mission/MapLoader.cpp' object='MapLoader.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MapLoader.Po' tmpdepfile='$(DEPDIR)/MapLoader.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MapLoader.obj `cygpath -w mission/MapLoader.cpp`

MissionDemo1.o: mission/MissionDemo1.cpp
@AMDEP_TRUE@	source='mission/MissionDemo1.cpp' object='MissionDemo1.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionDemo1.Po' tmpdepfile='$(DEPDIR)/MissionDemo1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionDemo1.o `test -f 'mission/MissionDemo1.cpp' || echo '$(srcdir)/'`mission/MissionDemo1.cpp

MissionDemo1.obj: mission/MissionDemo1.cpp
@AMDEP_TRUE@	source='mission/MissionDemo1.cpp' object='MissionDemo1.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionDemo1.Po' tmpdepfile='$(DEPDIR)/MissionDemo1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionDemo1.obj `cygpath -w mission/MissionDemo1.cpp`

MissionShip1.o: mission/MissionShip1.cpp
@AMDEP_TRUE@	source='mission/MissionShip1.cpp' object='MissionShip1.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionShip1.Po' tmpdepfile='$(DEPDIR)/MissionShip1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionShip1.o `test -f 'mission/MissionShip1.cpp' || echo '$(srcdir)/'`mission/MissionShip1.cpp

MissionShip1.obj: mission/MissionShip1.cpp
@AMDEP_TRUE@	source='mission/MissionShip1.cpp' object='MissionShip1.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionShip1.Po' tmpdepfile='$(DEPDIR)/MissionShip1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionShip1.obj `cygpath -w mission/MissionShip1.cpp`

MissionAirBattle.o: mission/MissionAirBattle.cpp
@AMDEP_TRUE@	source='mission/MissionAirBattle.cpp' object='MissionAirBattle.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionAirBattle.Po' tmpdepfile='$(DEPDIR)/MissionAirBattle.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionAirBattle.o `test -f 'mission/MissionAirBattle.cpp' || echo '$(srcdir)/'`mission/MissionAirBattle.cpp

MissionAirBattle.obj: mission/MissionAirBattle.cpp
@AMDEP_TRUE@	source='mission/MissionAirBattle.cpp' object='MissionAirBattle.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionAirBattle.Po' tmpdepfile='$(DEPDIR)/MissionAirBattle.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionAirBattle.obj `cygpath -w mission/MissionAirBattle.cpp`

MissionDepot.o: mission/MissionDepot.cpp
@AMDEP_TRUE@	source='mission/MissionDepot.cpp' object='MissionDepot.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionDepot.Po' tmpdepfile='$(DEPDIR)/MissionDepot.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionDepot.o `test -f 'mission/MissionDepot.cpp' || echo '$(srcdir)/'`mission/MissionDepot.cpp

MissionDepot.obj: mission/MissionDepot.cpp
@AMDEP_TRUE@	source='mission/MissionDepot.cpp' object='MissionDepot.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionDepot.Po' tmpdepfile='$(DEPDIR)/MissionDepot.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionDepot.obj `cygpath -w mission/MissionDepot.cpp`

MissionShip2.o: mission/MissionShip2.cpp
@AMDEP_TRUE@	source='mission/MissionShip2.cpp' object='MissionShip2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionShip2.Po' tmpdepfile='$(DEPDIR)/MissionShip2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionShip2.o `test -f 'mission/MissionShip2.cpp' || echo '$(srcdir)/'`mission/MissionShip2.cpp

MissionShip2.obj: mission/MissionShip2.cpp
@AMDEP_TRUE@	source='mission/MissionShip2.cpp' object='MissionShip2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionShip2.Po' tmpdepfile='$(DEPDIR)/MissionShip2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionShip2.obj `cygpath -w mission/MissionShip2.cpp`

MissionBase.o: mission/MissionBase.cpp
@AMDEP_TRUE@	source='mission/MissionBase.cpp' object='MissionBase.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionBase.Po' tmpdepfile='$(DEPDIR)/MissionBase.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionBase.o `test -f 'mission/MissionBase.cpp' || echo '$(srcdir)/'`mission/MissionBase.cpp

MissionBase.obj: mission/MissionBase.cpp
@AMDEP_TRUE@	source='mission/MissionBase.cpp' object='MissionBase.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionBase.Po' tmpdepfile='$(DEPDIR)/MissionBase.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionBase.obj `cygpath -w mission/MissionBase.cpp`

MissionDogfight1.o: mission/MissionDogfight1.cpp
@AMDEP_TRUE@	source='mission/MissionDogfight1.cpp' object='MissionDogfight1.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionDogfight1.Po' tmpdepfile='$(DEPDIR)/MissionDogfight1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionDogfight1.o `test -f 'mission/MissionDogfight1.cpp' || echo '$(srcdir)/'`mission/MissionDogfight1.cpp

MissionDogfight1.obj: mission/MissionDogfight1.cpp
@AMDEP_TRUE@	source='mission/MissionDogfight1.cpp' object='MissionDogfight1.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionDogfight1.Po' tmpdepfile='$(DEPDIR)/MissionDogfight1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionDogfight1.obj `cygpath -w mission/MissionDogfight1.cpp`

MissionShip3.o: mission/MissionShip3.cpp
@AMDEP_TRUE@	source='mission/MissionShip3.cpp' object='MissionShip3.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionShip3.Po' tmpdepfile='$(DEPDIR)/MissionShip3.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionShip3.o `test -f 'mission/MissionShip3.cpp' || echo '$(srcdir)/'`mission/MissionShip3.cpp

MissionShip3.obj: mission/MissionShip3.cpp
@AMDEP_TRUE@	source='mission/MissionShip3.cpp' object='MissionShip3.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionShip3.Po' tmpdepfile='$(DEPDIR)/MissionShip3.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionShip3.obj `cygpath -w mission/MissionShip3.cpp`

MissionCanyon1.o: mission/MissionCanyon1.cpp
@AMDEP_TRUE@	source='mission/MissionCanyon1.cpp' object='MissionCanyon1.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionCanyon1.Po' tmpdepfile='$(DEPDIR)/MissionCanyon1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionCanyon1.o `test -f 'mission/MissionCanyon1.cpp' || echo '$(srcdir)/'`mission/MissionCanyon1.cpp

MissionCanyon1.obj: mission/MissionCanyon1.cpp
@AMDEP_TRUE@	source='mission/MissionCanyon1.cpp' object='MissionCanyon1.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionCanyon1.Po' tmpdepfile='$(DEPDIR)/MissionCanyon1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionCanyon1.obj `cygpath -w mission/MissionCanyon1.cpp`

MissionDogfight2.o: mission/MissionDogfight2.cpp
@AMDEP_TRUE@	source='mission/MissionDogfight2.cpp' object='MissionDogfight2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionDogfight2.Po' tmpdepfile='$(DEPDIR)/MissionDogfight2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionDogfight2.o `test -f 'mission/MissionDogfight2.cpp' || echo '$(srcdir)/'`mission/MissionDogfight2.cpp

MissionDogfight2.obj: mission/MissionDogfight2.cpp
@AMDEP_TRUE@	source='mission/MissionDogfight2.cpp' object='MissionDogfight2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionDogfight2.Po' tmpdepfile='$(DEPDIR)/MissionDogfight2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionDogfight2.obj `cygpath -w mission/MissionDogfight2.cpp`

MissionTank1.o: mission/MissionTank1.cpp
@AMDEP_TRUE@	source='mission/MissionTank1.cpp' object='MissionTank1.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionTank1.Po' tmpdepfile='$(DEPDIR)/MissionTank1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionTank1.o `test -f 'mission/MissionTank1.cpp' || echo '$(srcdir)/'`mission/MissionTank1.cpp

MissionTank1.obj: mission/MissionTank1.cpp
@AMDEP_TRUE@	source='mission/MissionTank1.cpp' object='MissionTank1.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionTank1.Po' tmpdepfile='$(DEPDIR)/MissionTank1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionTank1.obj `cygpath -w mission/MissionTank1.cpp`

MissionCanyon2.o: mission/MissionCanyon2.cpp
@AMDEP_TRUE@	source='mission/MissionCanyon2.cpp' object='MissionCanyon2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionCanyon2.Po' tmpdepfile='$(DEPDIR)/MissionCanyon2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionCanyon2.o `test -f 'mission/MissionCanyon2.cpp' || echo '$(srcdir)/'`mission/MissionCanyon2.cpp

MissionCanyon2.obj: mission/MissionCanyon2.cpp
@AMDEP_TRUE@	source='mission/MissionCanyon2.cpp' object='MissionCanyon2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionCanyon2.Po' tmpdepfile='$(DEPDIR)/MissionCanyon2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionCanyon2.obj `cygpath -w mission/MissionCanyon2.cpp`

MissionDogfight3.o: mission/MissionDogfight3.cpp
@AMDEP_TRUE@	source='mission/MissionDogfight3.cpp' object='MissionDogfight3.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionDogfight3.Po' tmpdepfile='$(DEPDIR)/MissionDogfight3.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionDogfight3.o `test -f 'mission/MissionDogfight3.cpp' || echo '$(srcdir)/'`mission/MissionDogfight3.cpp

MissionDogfight3.obj: mission/MissionDogfight3.cpp
@AMDEP_TRUE@	source='mission/MissionDogfight3.cpp' object='MissionDogfight3.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionDogfight3.Po' tmpdepfile='$(DEPDIR)/MissionDogfight3.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionDogfight3.obj `cygpath -w mission/MissionDogfight3.cpp`

MissionTeamBase1.o: mission/MissionTeamBase1.cpp
@AMDEP_TRUE@	source='mission/MissionTeamBase1.cpp' object='MissionTeamBase1.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionTeamBase1.Po' tmpdepfile='$(DEPDIR)/MissionTeamBase1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionTeamBase1.o `test -f 'mission/MissionTeamBase1.cpp' || echo '$(srcdir)/'`mission/MissionTeamBase1.cpp

MissionTeamBase1.obj: mission/MissionTeamBase1.cpp
@AMDEP_TRUE@	source='mission/MissionTeamBase1.cpp' object='MissionTeamBase1.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionTeamBase1.Po' tmpdepfile='$(DEPDIR)/MissionTeamBase1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionTeamBase1.obj `cygpath -w mission/MissionTeamBase1.cpp`

MissionCanyon3.o: mission/MissionCanyon3.cpp
@AMDEP_TRUE@	source='mission/MissionCanyon3.cpp' object='MissionCanyon3.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionCanyon3.Po' tmpdepfile='$(DEPDIR)/MissionCanyon3.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionCanyon3.o `test -f 'mission/MissionCanyon3.cpp' || echo '$(srcdir)/'`mission/MissionCanyon3.cpp

MissionCanyon3.obj: mission/MissionCanyon3.cpp
@AMDEP_TRUE@	source='mission/MissionCanyon3.cpp' object='MissionCanyon3.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionCanyon3.Po' tmpdepfile='$(DEPDIR)/MissionCanyon3.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionCanyon3.obj `cygpath -w mission/MissionCanyon3.cpp`

MissionFreeFlight1.o: mission/MissionFreeFlight1.cpp
@AMDEP_TRUE@	source='mission/MissionFreeFlight1.cpp' object='MissionFreeFlight1.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionFreeFlight1.Po' tmpdepfile='$(DEPDIR)/MissionFreeFlight1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionFreeFlight1.o `test -f 'mission/MissionFreeFlight1.cpp' || echo '$(srcdir)/'`mission/MissionFreeFlight1.cpp

MissionFreeFlight1.obj: mission/MissionFreeFlight1.cpp
@AMDEP_TRUE@	source='mission/MissionFreeFlight1.cpp' object='MissionFreeFlight1.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionFreeFlight1.Po' tmpdepfile='$(DEPDIR)/MissionFreeFlight1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionFreeFlight1.obj `cygpath -w mission/MissionFreeFlight1.cpp`

MissionTest1.o: mission/MissionTest1.cpp
@AMDEP_TRUE@	source='mission/MissionTest1.cpp' object='MissionTest1.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionTest1.Po' tmpdepfile='$(DEPDIR)/MissionTest1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionTest1.o `test -f 'mission/MissionTest1.cpp' || echo '$(srcdir)/'`mission/MissionTest1.cpp

MissionTest1.obj: mission/MissionTest1.cpp
@AMDEP_TRUE@	source='mission/MissionTest1.cpp' object='MissionTest1.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionTest1.Po' tmpdepfile='$(DEPDIR)/MissionTest1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionTest1.obj `cygpath -w mission/MissionTest1.cpp`

MissionConvoy2.o: mission/MissionConvoy2.cpp
@AMDEP_TRUE@	source='mission/MissionConvoy2.cpp' object='MissionConvoy2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionConvoy2.Po' tmpdepfile='$(DEPDIR)/MissionConvoy2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionConvoy2.o `test -f 'mission/MissionConvoy2.cpp' || echo '$(srcdir)/'`mission/MissionConvoy2.cpp

MissionConvoy2.obj: mission/MissionConvoy2.cpp
@AMDEP_TRUE@	source='mission/MissionConvoy2.cpp' object='MissionConvoy2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionConvoy2.Po' tmpdepfile='$(DEPDIR)/MissionConvoy2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionConvoy2.obj `cygpath -w mission/MissionConvoy2.cpp`

MissionGround1.o: mission/MissionGround1.cpp
@AMDEP_TRUE@	source='mission/MissionGround1.cpp' object='MissionGround1.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionGround1.Po' tmpdepfile='$(DEPDIR)/MissionGround1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionGround1.o `test -f 'mission/MissionGround1.cpp' || echo '$(srcdir)/'`mission/MissionGround1.cpp

MissionGround1.obj: mission/MissionGround1.cpp
@AMDEP_TRUE@	source='mission/MissionGround1.cpp' object='MissionGround1.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionGround1.Po' tmpdepfile='$(DEPDIR)/MissionGround1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionGround1.obj `cygpath -w mission/MissionGround1.cpp`

MissionTest2.o: mission/MissionTest2.cpp
@AMDEP_TRUE@	source='mission/MissionTest2.cpp' object='MissionTest2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionTest2.Po' tmpdepfile='$(DEPDIR)/MissionTest2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionTest2.o `test -f 'mission/MissionTest2.cpp' || echo '$(srcdir)/'`mission/MissionTest2.cpp

MissionTest2.obj: mission/MissionTest2.cpp
@AMDEP_TRUE@	source='mission/MissionTest2.cpp' object='MissionTest2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionTest2.Po' tmpdepfile='$(DEPDIR)/MissionTest2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionTest2.obj `cygpath -w mission/MissionTest2.cpp`

MissionConvoy.o: mission/MissionConvoy.cpp
@AMDEP_TRUE@	source='mission/MissionConvoy.cpp' object='MissionConvoy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionConvoy.Po' tmpdepfile='$(DEPDIR)/MissionConvoy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionConvoy.o `test -f 'mission/MissionConvoy.cpp' || echo '$(srcdir)/'`mission/MissionConvoy.cpp

MissionConvoy.obj: mission/MissionConvoy.cpp
@AMDEP_TRUE@	source='mission/MissionConvoy.cpp' object='MissionConvoy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionConvoy.Po' tmpdepfile='$(DEPDIR)/MissionConvoy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionConvoy.obj `cygpath -w mission/MissionConvoy.cpp`

MissionMoonBase1.o: mission/MissionMoonBase1.cpp
@AMDEP_TRUE@	source='mission/MissionMoonBase1.cpp' object='MissionMoonBase1.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionMoonBase1.Po' tmpdepfile='$(DEPDIR)/MissionMoonBase1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionMoonBase1.o `test -f 'mission/MissionMoonBase1.cpp' || echo '$(srcdir)/'`mission/MissionMoonBase1.cpp

MissionMoonBase1.obj: mission/MissionMoonBase1.cpp
@AMDEP_TRUE@	source='mission/MissionMoonBase1.cpp' object='MissionMoonBase1.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionMoonBase1.Po' tmpdepfile='$(DEPDIR)/MissionMoonBase1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionMoonBase1.obj `cygpath -w mission/MissionMoonBase1.cpp`

MissionTransport.o: mission/MissionTransport.cpp
@AMDEP_TRUE@	source='mission/MissionTransport.cpp' object='MissionTransport.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionTransport.Po' tmpdepfile='$(DEPDIR)/MissionTransport.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionTransport.o `test -f 'mission/MissionTransport.cpp' || echo '$(srcdir)/'`mission/MissionTransport.cpp

MissionTransport.obj: mission/MissionTransport.cpp
@AMDEP_TRUE@	source='mission/MissionTransport.cpp' object='MissionTransport.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionTransport.Po' tmpdepfile='$(DEPDIR)/MissionTransport.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionTransport.obj `cygpath -w mission/MissionTransport.cpp`

Mission.o: mission/Mission.cpp
@AMDEP_TRUE@	source='mission/Mission.cpp' object='Mission.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Mission.Po' tmpdepfile='$(DEPDIR)/Mission.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Mission.o `test -f 'mission/Mission.cpp' || echo '$(srcdir)/'`mission/Mission.cpp

Mission.obj: mission/Mission.cpp
@AMDEP_TRUE@	source='mission/Mission.cpp' object='Mission.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Mission.Po' tmpdepfile='$(DEPDIR)/Mission.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Mission.obj `cygpath -w mission/Mission.cpp`

MissionMoonBattle.o: mission/MissionMoonBattle.cpp
@AMDEP_TRUE@	source='mission/MissionMoonBattle.cpp' object='MissionMoonBattle.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionMoonBattle.Po' tmpdepfile='$(DEPDIR)/MissionMoonBattle.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionMoonBattle.o `test -f 'mission/MissionMoonBattle.cpp' || echo '$(srcdir)/'`mission/MissionMoonBattle.cpp

MissionMoonBattle.obj: mission/MissionMoonBattle.cpp
@AMDEP_TRUE@	source='mission/MissionMoonBattle.cpp' object='MissionMoonBattle.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionMoonBattle.Po' tmpdepfile='$(DEPDIR)/MissionMoonBattle.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionMoonBattle.obj `cygpath -w mission/MissionMoonBattle.cpp`

MissionTunnel1.o: mission/MissionTunnel1.cpp
@AMDEP_TRUE@	source='mission/MissionTunnel1.cpp' object='MissionTunnel1.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionTunnel1.Po' tmpdepfile='$(DEPDIR)/MissionTunnel1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionTunnel1.o `test -f 'mission/MissionTunnel1.cpp' || echo '$(srcdir)/'`mission/MissionTunnel1.cpp

MissionTunnel1.obj: mission/MissionTunnel1.cpp
@AMDEP_TRUE@	source='mission/MissionTunnel1.cpp' object='MissionTunnel1.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionTunnel1.Po' tmpdepfile='$(DEPDIR)/MissionTunnel1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionTunnel1.obj `cygpath -w mission/MissionTunnel1.cpp`

MissionDeathMatch1.o: mission/MissionDeathMatch1.cpp
@AMDEP_TRUE@	source='mission/MissionDeathMatch1.cpp' object='MissionDeathMatch1.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionDeathMatch1.Po' tmpdepfile='$(DEPDIR)/MissionDeathMatch1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionDeathMatch1.o `test -f 'mission/MissionDeathMatch1.cpp' || echo '$(srcdir)/'`mission/MissionDeathMatch1.cpp

MissionDeathMatch1.obj: mission/MissionDeathMatch1.cpp
@AMDEP_TRUE@	source='mission/MissionDeathMatch1.cpp' object='MissionDeathMatch1.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionDeathMatch1.Po' tmpdepfile='$(DEPDIR)/MissionDeathMatch1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionDeathMatch1.obj `cygpath -w mission/MissionDeathMatch1.cpp`

MissionMoonDefense1.o: mission/MissionMoonDefense1.cpp
@AMDEP_TRUE@	source='mission/MissionMoonDefense1.cpp' object='MissionMoonDefense1.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionMoonDefense1.Po' tmpdepfile='$(DEPDIR)/MissionMoonDefense1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionMoonDefense1.o `test -f 'mission/MissionMoonDefense1.cpp' || echo '$(srcdir)/'`mission/MissionMoonDefense1.cpp

MissionMoonDefense1.obj: mission/MissionMoonDefense1.cpp
@AMDEP_TRUE@	source='mission/MissionMoonDefense1.cpp' object='MissionMoonDefense1.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionMoonDefense1.Po' tmpdepfile='$(DEPDIR)/MissionMoonDefense1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionMoonDefense1.obj `cygpath -w mission/MissionMoonDefense1.cpp`

MissionTutorial1.o: mission/MissionTutorial1.cpp
@AMDEP_TRUE@	source='mission/MissionTutorial1.cpp' object='MissionTutorial1.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionTutorial1.Po' tmpdepfile='$(DEPDIR)/MissionTutorial1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionTutorial1.o `test -f 'mission/MissionTutorial1.cpp' || echo '$(srcdir)/'`mission/MissionTutorial1.cpp

MissionTutorial1.obj: mission/MissionTutorial1.cpp
@AMDEP_TRUE@	source='mission/MissionTutorial1.cpp' object='MissionTutorial1.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionTutorial1.Po' tmpdepfile='$(DEPDIR)/MissionTutorial1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionTutorial1.obj `cygpath -w mission/MissionTutorial1.cpp`

MissionDeathMatch2.o: mission/MissionDeathMatch2.cpp
@AMDEP_TRUE@	source='mission/MissionDeathMatch2.cpp' object='MissionDeathMatch2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionDeathMatch2.Po' tmpdepfile='$(DEPDIR)/MissionDeathMatch2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionDeathMatch2.o `test -f 'mission/MissionDeathMatch2.cpp' || echo '$(srcdir)/'`mission/MissionDeathMatch2.cpp

MissionDeathMatch2.obj: mission/MissionDeathMatch2.cpp
@AMDEP_TRUE@	source='mission/MissionDeathMatch2.cpp' object='MissionDeathMatch2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionDeathMatch2.Po' tmpdepfile='$(DEPDIR)/MissionDeathMatch2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionDeathMatch2.obj `cygpath -w mission/MissionDeathMatch2.cpp`

MissionMoonDogfight1.o: mission/MissionMoonDogfight1.cpp
@AMDEP_TRUE@	source='mission/MissionMoonDogfight1.cpp' object='MissionMoonDogfight1.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionMoonDogfight1.Po' tmpdepfile='$(DEPDIR)/MissionMoonDogfight1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionMoonDogfight1.o `test -f 'mission/MissionMoonDogfight1.cpp' || echo '$(srcdir)/'`mission/MissionMoonDogfight1.cpp

MissionMoonDogfight1.obj: mission/MissionMoonDogfight1.cpp
@AMDEP_TRUE@	source='mission/MissionMoonDogfight1.cpp' object='MissionMoonDogfight1.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionMoonDogfight1.Po' tmpdepfile='$(DEPDIR)/MissionMoonDogfight1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionMoonDogfight1.obj `cygpath -w mission/MissionMoonDogfight1.cpp`

MissionTutorial2.o: mission/MissionTutorial2.cpp
@AMDEP_TRUE@	source='mission/MissionTutorial2.cpp' object='MissionTutorial2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionTutorial2.Po' tmpdepfile='$(DEPDIR)/MissionTutorial2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionTutorial2.o `test -f 'mission/MissionTutorial2.cpp' || echo '$(srcdir)/'`mission/MissionTutorial2.cpp

MissionTutorial2.obj: mission/MissionTutorial2.cpp
@AMDEP_TRUE@	source='mission/MissionTutorial2.cpp' object='MissionTutorial2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionTutorial2.Po' tmpdepfile='$(DEPDIR)/MissionTutorial2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionTutorial2.obj `cygpath -w mission/MissionTutorial2.cpp`

MissionDeathMatch3.o: mission/MissionDeathMatch3.cpp
@AMDEP_TRUE@	source='mission/MissionDeathMatch3.cpp' object='MissionDeathMatch3.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionDeathMatch3.Po' tmpdepfile='$(DEPDIR)/MissionDeathMatch3.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionDeathMatch3.o `test -f 'mission/MissionDeathMatch3.cpp' || echo '$(srcdir)/'`mission/MissionDeathMatch3.cpp

MissionDeathMatch3.obj: mission/MissionDeathMatch3.cpp
@AMDEP_TRUE@	source='mission/MissionDeathMatch3.cpp' object='MissionDeathMatch3.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionDeathMatch3.Po' tmpdepfile='$(DEPDIR)/MissionDeathMatch3.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionDeathMatch3.obj `cygpath -w mission/MissionDeathMatch3.cpp`

MissionMultiDogfight1.o: mission/MissionMultiDogfight1.cpp
@AMDEP_TRUE@	source='mission/MissionMultiDogfight1.cpp' object='MissionMultiDogfight1.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionMultiDogfight1.Po' tmpdepfile='$(DEPDIR)/MissionMultiDogfight1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionMultiDogfight1.o `test -f 'mission/MissionMultiDogfight1.cpp' || echo '$(srcdir)/'`mission/MissionMultiDogfight1.cpp

MissionMultiDogfight1.obj: mission/MissionMultiDogfight1.cpp
@AMDEP_TRUE@	source='mission/MissionMultiDogfight1.cpp' object='MissionMultiDogfight1.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionMultiDogfight1.Po' tmpdepfile='$(DEPDIR)/MissionMultiDogfight1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionMultiDogfight1.obj `cygpath -w mission/MissionMultiDogfight1.cpp`

MissionTutorial3.o: mission/MissionTutorial3.cpp
@AMDEP_TRUE@	source='mission/MissionTutorial3.cpp' object='MissionTutorial3.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionTutorial3.Po' tmpdepfile='$(DEPDIR)/MissionTutorial3.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionTutorial3.o `test -f 'mission/MissionTutorial3.cpp' || echo '$(srcdir)/'`mission/MissionTutorial3.cpp

MissionTutorial3.obj: mission/MissionTutorial3.cpp
@AMDEP_TRUE@	source='mission/MissionTutorial3.cpp' object='MissionTutorial3.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionTutorial3.Po' tmpdepfile='$(DEPDIR)/MissionTutorial3.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionTutorial3.obj `cygpath -w mission/MissionTutorial3.cpp`

MissionDefend1.o: mission/MissionDefend1.cpp
@AMDEP_TRUE@	source='mission/MissionDefend1.cpp' object='MissionDefend1.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionDefend1.Po' tmpdepfile='$(DEPDIR)/MissionDefend1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionDefend1.o `test -f 'mission/MissionDefend1.cpp' || echo '$(srcdir)/'`mission/MissionDefend1.cpp

MissionDefend1.obj: mission/MissionDefend1.cpp
@AMDEP_TRUE@	source='mission/MissionDefend1.cpp' object='MissionDefend1.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionDefend1.Po' tmpdepfile='$(DEPDIR)/MissionDefend1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionDefend1.obj `cygpath -w mission/MissionDefend1.cpp`

MissionScout.o: mission/MissionScout.cpp
@AMDEP_TRUE@	source='mission/MissionScout.cpp' object='MissionScout.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionScout.Po' tmpdepfile='$(DEPDIR)/MissionScout.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionScout.o `test -f 'mission/MissionScout.cpp' || echo '$(srcdir)/'`mission/MissionScout.cpp

MissionScout.obj: mission/MissionScout.cpp
@AMDEP_TRUE@	source='mission/MissionScout.cpp' object='MissionScout.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionScout.Po' tmpdepfile='$(DEPDIR)/MissionScout.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionScout.obj `cygpath -w mission/MissionScout.cpp`

MissionWaves1.o: mission/MissionWaves1.cpp
@AMDEP_TRUE@	source='mission/MissionWaves1.cpp' object='MissionWaves1.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionWaves1.Po' tmpdepfile='$(DEPDIR)/MissionWaves1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionWaves1.o `test -f 'mission/MissionWaves1.cpp' || echo '$(srcdir)/'`mission/MissionWaves1.cpp

MissionWaves1.obj: mission/MissionWaves1.cpp
@AMDEP_TRUE@	source='mission/MissionWaves1.cpp' object='MissionWaves1.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MissionWaves1.Po' tmpdepfile='$(DEPDIR)/MissionWaves1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MissionWaves1.obj `cygpath -w mission/MissionWaves1.cpp`

Color.o: model3d/Color.cpp
@AMDEP_TRUE@	source='model3d/Color.cpp' object='Color.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Color.Po' tmpdepfile='$(DEPDIR)/Color.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Color.o `test -f 'model3d/Color.cpp' || echo '$(srcdir)/'`model3d/Color.cpp

Color.obj: model3d/Color.cpp
@AMDEP_TRUE@	source='model3d/Color.cpp' object='Color.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Color.Po' tmpdepfile='$(DEPDIR)/Color.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Color.obj `cygpath -w model3d/Color.cpp`

Object3d.o: model3d/Object3d.cpp
@AMDEP_TRUE@	source='model3d/Object3d.cpp' object='Object3d.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Object3d.Po' tmpdepfile='$(DEPDIR)/Object3d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Object3d.o `test -f 'model3d/Object3d.cpp' || echo '$(srcdir)/'`model3d/Object3d.cpp

Object3d.obj: model3d/Object3d.cpp
@AMDEP_TRUE@	source='model3d/Object3d.cpp' object='Object3d.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Object3d.Po' tmpdepfile='$(DEPDIR)/Object3d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Object3d.obj `cygpath -w model3d/Object3d.cpp`

Space.o: model3d/Space.cpp
@AMDEP_TRUE@	source='model3d/Space.cpp' object='Space.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Space.Po' tmpdepfile='$(DEPDIR)/Space.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Space.o `test -f 'model3d/Space.cpp' || echo '$(srcdir)/'`model3d/Space.cpp

Space.obj: model3d/Space.cpp
@AMDEP_TRUE@	source='model3d/Space.cpp' object='Space.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Space.Po' tmpdepfile='$(DEPDIR)/Space.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Space.obj `cygpath -w model3d/Space.cpp`

SpherePart.o: model3d/SpherePart.cpp
@AMDEP_TRUE@	source='model3d/SpherePart.cpp' object='SpherePart.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SpherePart.Po' tmpdepfile='$(DEPDIR)/SpherePart.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SpherePart.o `test -f 'model3d/SpherePart.cpp' || echo '$(srcdir)/'`model3d/SpherePart.cpp

SpherePart.obj: model3d/SpherePart.cpp
@AMDEP_TRUE@	source='model3d/SpherePart.cpp' object='SpherePart.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SpherePart.Po' tmpdepfile='$(DEPDIR)/SpherePart.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SpherePart.obj `cygpath -w model3d/SpherePart.cpp`

Vector2.o: model3d/Vector2.cpp
@AMDEP_TRUE@	source='model3d/Vector2.cpp' object='Vector2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Vector2.Po' tmpdepfile='$(DEPDIR)/Vector2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Vector2.o `test -f 'model3d/Vector2.cpp' || echo '$(srcdir)/'`model3d/Vector2.cpp

Vector2.obj: model3d/Vector2.cpp
@AMDEP_TRUE@	source='model3d/Vector2.cpp' object='Vector2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Vector2.Po' tmpdepfile='$(DEPDIR)/Vector2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Vector2.obj `cygpath -w model3d/Vector2.cpp`

Material.o: model3d/Material.cpp
@AMDEP_TRUE@	source='model3d/Material.cpp' object='Material.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Material.Po' tmpdepfile='$(DEPDIR)/Material.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Material.o `test -f 'model3d/Material.cpp' || echo '$(srcdir)/'`model3d/Material.cpp

Material.obj: model3d/Material.cpp
@AMDEP_TRUE@	source='model3d/Material.cpp' object='Material.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Material.Po' tmpdepfile='$(DEPDIR)/Material.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Material.obj `cygpath -w model3d/Material.cpp`

Quad.o: model3d/Quad.cpp
@AMDEP_TRUE@	source='model3d/Quad.cpp' object='Quad.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Quad.Po' tmpdepfile='$(DEPDIR)/Quad.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Quad.o `test -f 'model3d/Quad.cpp' || echo '$(srcdir)/'`model3d/Quad.cpp

Quad.obj: model3d/Quad.cpp
@AMDEP_TRUE@	source='model3d/Quad.cpp' object='Quad.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Quad.Po' tmpdepfile='$(DEPDIR)/Quad.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Quad.obj `cygpath -w model3d/Quad.cpp`

SpaceObj.o: model3d/SpaceObj.cpp
@AMDEP_TRUE@	source='model3d/SpaceObj.cpp' object='SpaceObj.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SpaceObj.Po' tmpdepfile='$(DEPDIR)/SpaceObj.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SpaceObj.o `test -f 'model3d/SpaceObj.cpp' || echo '$(srcdir)/'`model3d/SpaceObj.cpp

SpaceObj.obj: model3d/SpaceObj.cpp
@AMDEP_TRUE@	source='model3d/SpaceObj.cpp' object='SpaceObj.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SpaceObj.Po' tmpdepfile='$(DEPDIR)/SpaceObj.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SpaceObj.obj `cygpath -w model3d/SpaceObj.cpp`

Texture.o: model3d/Texture.cpp
@AMDEP_TRUE@	source='model3d/Texture.cpp' object='Texture.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Texture.Po' tmpdepfile='$(DEPDIR)/Texture.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Texture.o `test -f 'model3d/Texture.cpp' || echo '$(srcdir)/'`model3d/Texture.cpp

Texture.obj: model3d/Texture.cpp
@AMDEP_TRUE@	source='model3d/Texture.cpp' object='Texture.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Texture.Po' tmpdepfile='$(DEPDIR)/Texture.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Texture.obj `cygpath -w model3d/Texture.cpp`

Vector3.o: model3d/Vector3.cpp
@AMDEP_TRUE@	source='model3d/Vector3.cpp' object='Vector3.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Vector3.Po' tmpdepfile='$(DEPDIR)/Vector3.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Vector3.o `test -f 'model3d/Vector3.cpp' || echo '$(srcdir)/'`model3d/Vector3.cpp

Vector3.obj: model3d/Vector3.cpp
@AMDEP_TRUE@	source='model3d/Vector3.cpp' object='Vector3.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Vector3.Po' tmpdepfile='$(DEPDIR)/Vector3.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Vector3.obj `cygpath -w model3d/Vector3.cpp`

Model3d.o: model3d/Model3d.cpp
@AMDEP_TRUE@	source='model3d/Model3d.cpp' object='Model3d.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Model3d.Po' tmpdepfile='$(DEPDIR)/Model3d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Model3d.o `test -f 'model3d/Model3d.cpp' || echo '$(srcdir)/'`model3d/Model3d.cpp

Model3d.obj: model3d/Model3d.cpp
@AMDEP_TRUE@	source='model3d/Model3d.cpp' object='Model3d.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Model3d.Po' tmpdepfile='$(DEPDIR)/Model3d.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Model3d.obj `cygpath -w model3d/Model3d.cpp`

Rotation.o: model3d/Rotation.cpp
@AMDEP_TRUE@	source='model3d/Rotation.cpp' object='Rotation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Rotation.Po' tmpdepfile='$(DEPDIR)/Rotation.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rotation.o `test -f 'model3d/Rotation.cpp' || echo '$(srcdir)/'`model3d/Rotation.cpp

Rotation.obj: model3d/Rotation.cpp
@AMDEP_TRUE@	source='model3d/Rotation.cpp' object='Rotation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Rotation.Po' tmpdepfile='$(DEPDIR)/Rotation.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rotation.obj `cygpath -w model3d/Rotation.cpp`

Sphere.o: model3d/Sphere.cpp
@AMDEP_TRUE@	source='model3d/Sphere.cpp' object='Sphere.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Sphere.Po' tmpdepfile='$(DEPDIR)/Sphere.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Sphere.o `test -f 'model3d/Sphere.cpp' || echo '$(srcdir)/'`model3d/Sphere.cpp

Sphere.obj: model3d/Sphere.cpp
@AMDEP_TRUE@	source='model3d/Sphere.cpp' object='Sphere.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Sphere.Po' tmpdepfile='$(DEPDIR)/Sphere.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Sphere.obj `cygpath -w model3d/Sphere.cpp`

Triangle.o: model3d/Triangle.cpp
@AMDEP_TRUE@	source='model3d/Triangle.cpp' object='Triangle.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Triangle.Po' tmpdepfile='$(DEPDIR)/Triangle.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Triangle.o `test -f 'model3d/Triangle.cpp' || echo '$(srcdir)/'`model3d/Triangle.cpp

Triangle.obj: model3d/Triangle.cpp
@AMDEP_TRUE@	source='model3d/Triangle.cpp' object='Triangle.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Triangle.Po' tmpdepfile='$(DEPDIR)/Triangle.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Triangle.obj `cygpath -w model3d/Triangle.cpp`

Vertex.o: model3d/Vertex.cpp
@AMDEP_TRUE@	source='model3d/Vertex.cpp' object='Vertex.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Vertex.Po' tmpdepfile='$(DEPDIR)/Vertex.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Vertex.o `test -f 'model3d/Vertex.cpp' || echo '$(srcdir)/'`model3d/Vertex.cpp

Vertex.obj: model3d/Vertex.cpp
@AMDEP_TRUE@	source='model3d/Vertex.cpp' object='Vertex.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Vertex.Po' tmpdepfile='$(DEPDIR)/Vertex.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Vertex.obj `cygpath -w model3d/Vertex.cpp`

AiObj.o: aiobject/AiObj.cpp
@AMDEP_TRUE@	source='aiobject/AiObj.cpp' object='AiObj.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/AiObj.Po' tmpdepfile='$(DEPDIR)/AiObj.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AiObj.o `test -f 'aiobject/AiObj.cpp' || echo '$(srcdir)/'`aiobject/AiObj.cpp

AiObj.obj: aiobject/AiObj.cpp
@AMDEP_TRUE@	source='aiobject/AiObj.cpp' object='AiObj.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/AiObj.Po' tmpdepfile='$(DEPDIR)/AiObj.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AiObj.obj `cygpath -w aiobject/AiObj.cpp`

DynamicObj.o: aiobject/DynamicObj.cpp
@AMDEP_TRUE@	source='aiobject/DynamicObj.cpp' object='DynamicObj.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DynamicObj.Po' tmpdepfile='$(DEPDIR)/DynamicObj.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DynamicObj.o `test -f 'aiobject/DynamicObj.cpp' || echo '$(srcdir)/'`aiobject/DynamicObj.cpp

DynamicObj.obj: aiobject/DynamicObj.cpp
@AMDEP_TRUE@	source='aiobject/DynamicObj.cpp' object='DynamicObj.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DynamicObj.Po' tmpdepfile='$(DEPDIR)/DynamicObj.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DynamicObj.obj `cygpath -w aiobject/DynamicObj.cpp`
CXXDEPMODE = @CXXDEPMODE@
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic distclean distclean-compile distclean-depend \
	distclean-generic distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-binPROGRAMS install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
